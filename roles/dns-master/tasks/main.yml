---
# tasks file for Bind setup
- name: Install bind
  yum:
    pkg: bind
    state: installed

- name: Set hostname
  hostname:
    name: "{{ host_name }}"

- name: Set hostname fact
  set_fact:
    ansible_fqdn: "{{ host_name }}"

- name: Add localhost to resolv.conf
  lineinfile:
    dest: /etc/resolv.conf
    state: present
    line: 'nameserver 127.0.0.1'
    insertbefore: BOF

- name: Copy named conf file
  template:
    src: named.conf.j2
    dest: /etc/named.conf
    owner: root
    group: named
    mode: 0660
  notify: restart named

- name: Make named directory
  file:
    path: /etc/named
    state: directory
    owner: root
    group: named
    mode: 0750

- name: Copy named conf local file
  template:
    src: named.conf.local.j2
    dest: /etc/named/named.conf.local
    owner: root
    group: named
    mode: 0640
  notify: restart named


- name: Make zones Directory
  file:
    path: /etc/named/zones
    state: directory
    owner: root
    group: named
    mode: 0770

- name: Copy forward file
  template:
    src: db.forward.j2
    dest: /etc/named/zones/db.{{ domain }}
    owner: root
    group: named
    mode: 0660
  notify: restart named


- name: Copy reverse file
  template:
    src: db.reverse.j2
    dest: /etc/named/zones/db.{{ rev_domain }}
    owner: root
    group: named
    mode: 0660
  notify: restart named

- name: Copy the generate keys script
  template: 
    src: config_dnssec.sh.j2
    dest: /root/config_dnssec.sh
    mode: 0700

- name: Generate master keys
  command: /root/config_dnssec.sh 
  register: command_result

- name: Clean up after named DNSSEC script
  file: path=/root/config_dnssec.sh state=absent
  changed_when: False

- name: Get filename master key file
  shell: ls -1 /var/named/K{{domain}}*.key
  register: master_key_file

- name: Get filename master private file
  shell: ls -1 /var/named/K{{domain}}*.private
  register: master_private_file

- name: Copy master key file
  fetch: src={{ master_key_file.stdout }} dest=/tmp/{{domain}}_vault.key flat=yes

- name: Copy master key file
  fetch: src={{ master_private_file.stdout }} dest=/tmp/{{domain}}_vault.private flat=yes

- name: Open firewall port
  firewalld:
    service: dns
    permanent: true
    state: enabled
    immediate: yes
