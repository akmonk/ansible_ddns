#!/bin/bash

domain={{ domain }}

# $keyfile will contain a new DNSSEC key for our domain.
keyfile=/var/named/${domain}.key


if ! cat /var/named/K${domain}*.key > /dev/null 2>&1; then
    # Remove old keys
    rm -vf /var/named/K${domain}*

    # Generate the new key for the domain.
    pushd /var/named
      dnssec-keygen -a HMAC-MD5 -b 512 -n USER -r /dev/urandom ${domain}
      bind_key="$(grep Key: K${domain}*.private | cut -d ' ' -f 2)"
    popd
    #changed=1

    if ! [ -f $keyfile ]; then
    # Verify we have a key
    rndc-confgen -a -r /dev/urandom
    # Get SELinux and perms in order 
      restorecon -v /etc/rndc.* /etc/named.*
      chcon -R system_u:object_r:named_zone_t:s0 /etc/named/zones
      setsebool -P named_write_master_zones 1
      chown -v root:named /etc/rndc.key
      chmod -v 640 /etc/rndc.key

    # Put the config in place
    cat <<-EOF > $keyfile
        key ${domain} {
          algorithm HMAC-MD5;
          secret "${bind_key}";
        };
EOF
   fi
fi

